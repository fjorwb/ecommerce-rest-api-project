openapi: 3.0.0
info:
  title: ecomm-fjor
  description: RESTful API project of Codecademy' s Full-Stack-Engineering path
  contact: {}
  version: '1.0'
servers:
  - url: https://ecommerce-fjor.herokuapp.com
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: registerUser
      operationId: registerUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registerUserRequest'
            example:
              firstname: mary
              lastname: poppins
              email: mary@post.eu
              password: secret
              password2: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: https://ecommerce-fjor.herokuapp.com
          variables: {}
  /auth/login:
    post:
      tags:
        - Auth
      summary: loginUser
      operationId: loginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUserRequest'
            example:
              email: john@mail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
      servers:
        - url: https://ecommerce-fjor.herokuapp.com
          variables: {}
  /auth/logout:
    get:
      tags:
        - Auth
      summary: logoutUser
      operationId: logoutUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users:
    get:
      tags:
        - users
      summary: getAllUsers
      operationId: getAllUsers
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/{id}:
    get:
      tags:
        - users
      summary: getUserById
      operationId: getUserById
      parameters:
        in: path
        name: id
        required: true
        schema:
          type: integer
          minimum: 1
        description: the user id (not user_id)
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    put:
      tags:
        - users
      summary: updateUser
      operationId: updateUser
      parameters:
        in: path
        name: id
        required: true
        schema:
          type: integer
          minimum: 1
        description: the user id (not user_id)
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateUserRequest'
            example:
              name: mary pops
              email: mary@post.ca
              role: user
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - users
      summary: deleteUser
      operationId: deleteUser
      parameters:
        in: path
        name: id
        required: true
        schema:
          type: integer
          minimum: 1
        description: the user id (not user_id)
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /users/user/{name}:
    get:
      tags:
        - users
      summary: getUserByName
      operationId: getUserByName
      parameters:
        in: path
        name: name
        required: true
        schema:
          type: string
        description: the user name
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /accounts:
    get:
      tags:
        - Accounts
      summary: getAllAccounts
      operationId: getAllAccounts
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
        - Accounts
      summary: createAccount
      operationId: createAccount
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAccountRequest'
            example:
              user_id: '000001'
              accotype: 2
              amount: 130
              tax: 0
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /accounts/28:
    get:
      tags:
        - Accounts
      summary: getAccountById
      operationId: getAccountById
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /accounts/30:
    put:
      tags:
        - Accounts
      summary: updateAccount
      operationId: updateAccount
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAccountRequest'
            example:
              amount: 50
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - Accounts
      summary: deleteAccount
      operationId: deleteAccount
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /categories:
    get:
      tags:
        - Categories
      summary: getAllCategories
      operationId: getAllCategories
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
        - Categories
      summary: createCategory
      operationId: createCategory
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createCategoryRequest'
            example:
              category_id: '1004'
              category_name: frozen foods
              category_description: frozen foods
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /categories/1:
    get:
      tags:
        - Categories
      summary: getCategoryById
      operationId: getCategoryById
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /categories/10:
    put:
      tags:
        - Categories
      summary: updateCategory
      operationId: updateCategory
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateCategoryRequest'
            example:
              category_id: '1004'
              category_name: frozen food
              category_description: frozen food
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - Categories
      summary: deleteCategory
      operationId: deleteCategory
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /products:
    get:
      tags:
        - Products
      summary: getAllProducts
      operationId: getAllProducts
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
        - Products
      summary: createProduct
      operationId: createProduct
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createProductRequest'
            example:
              product_id: 1002-1040
              name: Mango
              description: Mango
              price: 70.35
              unit: kg
              discount: 0
              img: https://i.ibb.co/BPCthCS/mango.png
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /products/5:
    get:
      tags:
        - Products
      summary: getProductById
      operationId: getProductById
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /products/30:
    put:
      tags:
        - Products
      summary: updateProduct
      operationId: updateProduct
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProductRequest'
            example:
              product_id: 1002-1040
              name: Radish
              description: Radish
              unit: kg
              price: 215.86
              discount: 0.5
              img: https://i.ibb.co/k0GRcrS/radish.png
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - Products
      summary: deleteProduct
      operationId: deleteProduct
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /products/category/1000:
    get:
      tags:
        - Products
      summary: getProductsByCategoryId
      operationId: getProductsByCategoryId
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /cart:
    get:
      tags:
        - Cart
      summary: getAllCarts
      operationId: getAllCarts
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
        - Cart
      summary: createCart
      operationId: createCart
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createCartRequest'
            example:
              samecart: true
              user_id: '000002'
              product_id: 1002-1002
              quantity: 3
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    put:
      tags:
        - Cart
      summary: updateCart
      operationId: updateCart
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateCartRequest'
            example:
              cart_id: '000005'
              product_id: 1002-1002
              quantity: 10
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /cart/3:
    get:
      tags:
        - Cart
      summary: getCartById
      operationId: getCartById
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /cart/cart/000005:
    get:
      tags:
        - Cart
      summary: getCartByCartId
      operationId: getCartByCartId
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
        - Cart
      summary: deleteAllCart
      operationId: deleteAllCart
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /cart/22:
    delete:
      tags:
        - Cart
      summary: deleteCartItem
      operationId: deleteCartItem
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /orders:
    get:
      tags:
        - Orders
      summary: getAllOrders
      operationId: getAllOrders
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
        - Orders
      summary: createOrder
      operationId: createOrder
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createOrderRequest'
            example:
              cart_id: '000004'
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    put:
      tags:
        - Orders
      summary: updateOrder
      operationId: updateOrder
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateOrderRequest'
            example:
              order_id: '000003'
              product_id: 1001-1014
              quantity: 90
              price: 5.1
              discount: 0.1
              tax: 0.06
              date: 1652473014
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /orders/44:
    get:
      tags:
        - Orders
      summary: getOrderById
      operationId: getOrderById
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /orders/order/000002:
    get:
      tags:
        - Orders
      summary: getOrderByOrderId
      operationId: getOrderByOrderId
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /orders/order/000004:
    delete:
      tags:
        - Orders
      summary: deleteOrder
      operationId: deleteOrder
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /checkout:
    get:
      tags:
        - Checkout
      summary: checkout
      operationId: checkout
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    registerUserRequest:
      title: registerUserRequest
      required:
        - firstname
        - lastname
        - email
        - password
        - password2
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        password:
          type: string
        password2:
          type: string
      example:
        firstname: mary
        lastname: poppins
        email: mary@post.eu
        password: secret
        password2: secret
    loginUserRequest:
      title: loginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: john@mail.com
        password: secret
    updateUserRequest:
      title: updateUserRequest
      required:
        - name
        - email
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      example:
        name: mary pops
        email: mary@post.ca
    deleteUserRequest:
      title: deleteUserRequest
      required:
        - name
        - email
      type: object
      properties:
        name:
          type: string
        email:
          type: string
      example:
        name: tutti
        email: tutti@post.com
    createAccountRequest:
      title: createAccountRequest
      required:
        - user_id
        - accotype
        - amount
        - tax
      type: object
      properties:
        user_id:
          type: string
        accotype:
          type: integer
          format: int32
        amount:
          type: integer
          format: int32
        tax:
          type: integer
          format: int32
      example:
        user_id: '000001'
        accotype: 2
        amount: 130
        tax: 0
    updateAccountRequest:
      title: updateAccountRequest
      required:
        - amount
      type: object
      properties:
        amount:
          type: integer
          format: int32
      example:
        amount: 50
    createCategoryRequest:
      title: createCategoryRequest
      required:
        - category_id
        - category_name
        - category_description
      type: object
      properties:
        category_id:
          type: string
        category_name:
          type: string
        category_description:
          type: string
      example:
        category_id: '1004'
        category_name: frozen foods
        category_description: frozen foods
    updateCategoryRequest:
      title: updateCategoryRequest
      required:
        - category_id
        - category_name
        - category_description
      type: object
      properties:
        category_id:
          type: string
        category_name:
          type: string
        category_description:
          type: string
      example:
        category_id: '1004'
        category_name: frozen food
        category_description: frozen food
    deleteCategoryRequest:
      title: deleteCategoryRequest
      required:
        - category_id
        - category_name
        - category_description
      type: object
      properties:
        category_id:
          type: string
        category_name:
          type: string
        category_description:
          type: string
      example:
        category_id: '1100'
        category_name: beverages
        category_description: beverages
    createProductRequest:
      title: createProductRequest
      required:
        - product_id
        - name
        - description
        - price
        - unit
        - discount
        - img
      type: object
      properties:
        product_id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        unit:
          type: string
        discount:
          type: integer
          format: int32
        img:
          type: string
      example:
        product_id: 1002-1040
        name: Mango
        description: Mango
        price: 70.35
        unit: kg
        discount: 0
        img: https://i.ibb.co/BPCthCS/mango.png
    updateProductRequest:
      title: updateProductRequest
      required:
        - product_id
        - name
        - description
        - unit
        - price
        - discount
        - img
      type: object
      properties:
        product_id:
          type: string
        name:
          type: string
        description:
          type: string
        unit:
          type: string
        price:
          type: number
        discount:
          type: number
        img:
          type: string
      example:
        product_id: 1002-1040
        name: Radish
        description: Radish
        unit: kg
        price: 215.86
        discount: 0.5
        img: https://i.ibb.co/k0GRcrS/radish.png
    createCartRequest:
      title: createCartRequest
      required:
        - samecart
        - user_id
        - product_id
        - quantity
      type: object
      properties:
        samecart:
          type: boolean
        user_id:
          type: string
        product_id:
          type: string
        quantity:
          type: integer
          format: int32
      example:
        samecart: true
        user_id: '000002'
        product_id: 1002-1002
        quantity: 3
    updateCartRequest:
      title: updateCartRequest
      required:
        - cart_id
        - product_id
        - quantity
      type: object
      properties:
        cart_id:
          type: string
        product_id:
          type: string
        quantity:
          type: integer
          format: int32
      example:
        cart_id: '000005'
        product_id: 1002-1002
        quantity: 10
    createOrderRequest:
      title: createOrderRequest
      required:
        - cart_id
      type: object
      properties:
        cart_id:
          type: string
      example:
        cart_id: '000004'
    updateOrderRequest:
      title: updateOrderRequest
      required:
        - order_id
        - product_id
        - quantity
        - price
        - discount
        - tax
        - date
      type: object
      properties:
        order_id:
          type: string
        product_id:
          type: string
        quantity:
          type: integer
          format: int32
        price:
          type: number
        discount:
          type: number
        tax:
          type: number
        date:
          type: integer
          format: int32
      example:
        order_id: '000003'
        product_id: 1001-1014
        quantity: 90
        price: 5.1
        discount: 0.1
        tax: 0.06
        date: 1652473014
tags:
  - name: Auth
  - name: users
  - name: Accounts
  - name: Categories
  - name: Products
  - name: Cart
  - name: Orders
  - name: Checkout
